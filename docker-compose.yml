version: '3.8'
name: intelli-trade

services:
  mysql:
    image: mysql:9.3.0
    restart: always
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql-data:/var/lib/mysql

  neo4j:
    image: neo4j:5.26.9
    restart: always
    ports:
      - '7474:7474'
      - '7687:7687'
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka_data:/bitnami/kafka
  mongo:
    image: mongo:6.0
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
  market-service:
    build: ./backend/market-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - MONGO_URI=${MONGO_URI_MARKET}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_DB_MARKET=${MONGO_DB_MARKET}

    depends_on:
      - redis
  crawler-service:
    build: ./backend/crawler-service
    depends_on:
      - mongo
    environment:
      - MONGO_URI=${MONGO_URI_CRAWLER}
      - MONGO_DB=${MONGO_DB_CRAWLER}
    ports:
      - "5002:5002"
    volumes:
      - crawler_state:/var/lib/crawler

volumes:
  mysql-data:
  neo4j-data:
  neo4j-logs:
  kafka_data:
  mongo_data:
  crawler_state:
